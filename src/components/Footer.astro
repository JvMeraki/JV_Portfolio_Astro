---
import Dock from "@/components/svelte/DockMenu.svelte";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<footer class="w-full py-12 border-t border-[#ffffff10] relative">
  <div class="max-w-5xl mx-auto">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-10 items-start">
      <div class="flex flex-col items-center lg:items-start space-y-6">
        <Dock client:only="svelte" />
        <span
          class="group relative w-40 h-10 flex items-center justify-center p-3
          rounded-full transition-all duration-300 ease-in-out transform border-2
          border-[var(--white-icon)] hover:scale-105
          text-sm text-[var(--white-icon)] font-medium"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
            class="w-5 h-5 mr-2 text-[var(--white-icon)]"
          >
            <path
              d="M16.5 3C19.5376 3 22 5.5 22 9C22 16 14.5 20 12 21.5C9.5 20 2 16 2 9C2 5.5 4.5 3 7.5 3C9.35997 3 11 4 12 5C13 4 14.64 3 16.5 3ZM12.9339 18.6038C13.8155 18.0485 14.61 17.4955 15.3549 16.9029C18.3337 14.533 20 11.9435 20 9C20 6.64076 18.463 5 16.5 5C15.4241 5 14.2593 5.56911 13.4142 6.41421L12 7.82843L10.5858 6.41421C9.74068 5.56911 8.5759 5 7.5 5C5.55906 5 4 6.6565 4 9C4 11.9435 5.66627 14.533 8.64514 16.9029C9.39 17.4955 10.1845 18.0485 11.0661 18.6038C11.3646 18.7919 11.6611 18.9729 12 19.1752C12.3389 18.9729 12.6354 18.7919 12.9339 18.6038Z"
            ></path>
          </svg>
          {t("footer_button")}
        </span>
      </div>

      <div class="flex flex-col items-center space-y-6">
        <div class="grid grid-cols-1 gap-3 w-full max-w-xs py-6">
          {
            [
              {
                desc: t("footer_build"),
                name: "Astro",
                icon: "/svg/astro.svg",
                alt: "Astro Logo",
              },
              {
                desc: t("footer_component"),
                name: "Svelte",
                icon: "/svg/svelte-2.svg",
                alt: "Svelte Logo",
              },
              {
                desc: t("footer_style"),
                name: "TailwindCSS",
                icon: "/svg/tailwindcss.svg",
                alt: "TailwindCSS Logo",
              },
              {
                desc: t("footer_deploy"),
                name: "Vercel",
                icon: "/svg/vercel.svg",
                alt: "Vercel Logo",
              },
            ].map((tech) => (
              <div class="flex items-center justify-center space-x-3">
                <span class="text-[var(--white-icon)] text-sm">
                  {tech.desc}
                </span>
                <img
                  src={tech.icon}
                  alt={tech.alt}
                  class="h-5 w-5 object-contain filter brightness-0 invert opacity-50"
                  loading="lazy"
                />
                <span class="text-[var(--white-icon)] text-sm">
                  {tech.name}
                </span>
              </div>
            ))
          }
        </div>
      </div>

      <div class="flex flex-col items-center lg:items-end space-y-6">
        <div class="flex items-center justify-center lg:justify-end">
          <div
            class="relative w-40 h-40 rounded-full overflow-hidden shadow-[0_0_20px_5px_rgba(255,255,255,0.5)]"
          >
            <img
              src="/profile-pic.webp"
              alt="Foto de perfil"
              class="w-full h-full object-cover"
            />
          </div>
        </div>
      </div>
    </div>

    <div class="mt-12 pt-8 border-t border-[#ffffff10]">
      <p class="text-center text-sm text-[var(--white-icon)] space-y-2">
        <span class="block sm:inline">
          {t("footer_create")}
          <a
            href="https://github.com/JvMeraki"
            target="_blank"
            class="text-gray-400 hover:text-[var(--orange)] transition-colors duration-300"
            >{t("footer_name")}</a
          >. {t("year")}.
        </span>
      </p>
    </div>
  </div>
</footer>
